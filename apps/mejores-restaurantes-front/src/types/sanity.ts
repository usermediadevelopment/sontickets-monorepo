/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SocialMedia = {
  _type: "socialMedia";
  platform?:
    | "Facebook"
    | "Twitter"
    | "Instagram"
    | "LinkedIn"
    | "TikTok"
    | "YouTube";
  url?: string;
};

export type Review = {
  _id: string;
  _type: "review";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  reviewerName?: string;
  rating?: number;
  reviewText?: string;
  date?: string;
  restaurant?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "restaurant";
  };
};

export type OpeningHour = {
  _type: "openingHour";
  day?:
    | "Monday"
    | "Tuesday"
    | "Wednesday"
    | "Thursday"
    | "Friday"
    | "Saturday"
    | "Sunday";
  openingTime?:
    | "1:00"
    | "1:30"
    | "2:00"
    | "2:30"
    | "3:00"
    | "3:30"
    | "4:00"
    | "4:30"
    | "5:00"
    | "5:30"
    | "6:00"
    | "6:30"
    | "7:00"
    | "7:30"
    | "8:00"
    | "8:30"
    | "9:00"
    | "9:30"
    | "10:00"
    | "10:30"
    | "11:00"
    | "11:30"
    | "12:00"
    | "12:30";
  openingTimeMeridiem?: "AM" | "PM";
  closingTime?:
    | "1:00"
    | "1:30"
    | "2:00"
    | "2:30"
    | "3:00"
    | "3:30"
    | "4:00"
    | "4:30"
    | "5:00"
    | "5:30"
    | "6:00"
    | "6:30"
    | "7:00"
    | "7:30"
    | "8:00"
    | "8:30"
    | "9:00"
    | "9:30"
    | "10:00"
    | "10:30"
    | "11:00"
    | "11:30"
    | "12:00"
    | "12:30";
  closingTimeMeridiem?: "AM" | "PM";
  isClosed?: boolean;
};

export type MenuItem = {
  _type: "menuItem";
  dishName?: string;
  description?: string;
  price?: number;
  photo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  allergens?: Array<string>;
  isVegetarian?: boolean;
  isVegan?: boolean;
  isGlutenFree?: boolean;
};

export type MenuCategory = {
  _type: "menuCategory";
  categoryName?: string;
  items?: Array<
    {
      _key: string;
    } & MenuItem
  >;
};

export type Location = {
  _id: string;
  _type: "location";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  enabled?: boolean;
  externalId?: string;
  name?: string;
  slug?: Slug;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  restaurant?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "restaurant";
  };
  phoneNumbers?: Array<string>;
  googlePlaceId?: string;
  country?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "country";
  };
  city?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "city";
  };
  area?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "area";
  };
  address?: string;
  postalCode?: string;
  geoLocation?: Geopoint;
  photos?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
  awards?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
  pdfMenuFile?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    _type: "file";
  };
  urlMenuFile?: string;
  schedule?: Array<
    {
      _key: string;
    } & OpeningHour
  >;
  outstandingFeatures?: Array<string>;
  dietaryPreferences?: Array<string>;
  ambiance?: Array<string>;
  facilities?: Array<string>;
  entertainment?: Array<string>;
  suitableFor?: Array<string>;
  paymentOptions?: Array<string>;
  contact?: ContactInfo;
  reservation?: boolean;
  seo?: Seo;
};

export type ContactInfo = {
  _type: "contactInfo";
  phone?: string;
  email?: string;
  fax?: string;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Area = {
  _id: string;
  _type: "area";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  city?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "city";
  };
  slug?: Slug;
};

export type Country = {
  _id: string;
  _type: "country";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  code?: string;
  continent?: string;
};

export type Restaurant = {
  _id: string;
  _type: "restaurant";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  externalId?: string;
  description?: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  reservationUrl?: string;
  pdfMenuFile?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.fileAsset";
    };
    _type: "file";
  };
  urlMenuFile?: string;
  website?: string;
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  priceRange?: {
    minPrice?: number;
    maxPrice?: number;
    currency?: "COP" | "EUR" | "GBP";
  };
  contactEmail?: string;
  socialMedia?: Array<
    {
      _key: string;
    } & SocialMedia
  >;
  seo?: Seo;
  whatsappActive?: boolean;
  whatsappNumber?: string;
  whatsappMessage?: string;
};

export type Seo = {
  _type: "seo";
  metaTitle?: string;
  metaDescription?: string;
  keywords?: Array<string>;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type City = {
  _id: string;
  _type: "city";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
};

export type Category = {
  _id: string;
  _type: "category";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  description?: string;
  icon?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SocialMedia
  | Review
  | OpeningHour
  | MenuItem
  | MenuCategory
  | Location
  | ContactInfo
  | Geopoint
  | Area
  | Country
  | Restaurant
  | Seo
  | SanityFileAsset
  | City
  | Category
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | Slug;
export declare const internalGroqTypeReferenceTo: unique symbol;
